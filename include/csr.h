#ifndef RISC_V_SEC_CSR_H
#define RISC_V_SEC_CSR_H

#include <stdint.h>
#include "risc-v-sec.h"

enum csr {
  USTATUS         = 0x000,
  UIE             = 0x004,
  UTVEC           = 0x005,
  USCRATCH        = 0x040,
  UEPC            = 0x041,
  UCAUSE          = 0x042,
  UTVAL           = 0x043,
  UIP             = 0x044,
  FFLAGS          = 0x001,
  FRM             = 0x002,
  FCSR            = 0x003,
  CYCLE           = 0xc00,
  TIME            = 0xc01,
  INSTRET         = 0xc02,
  HPMCOUNTER3     = 0xc03,
  HPMCOUNTER4     = 0xc04,
  HPMCOUNTER5     = 0xc05,
  HPMCOUNTER6     = 0xc06,
  HPMCOUNTER7     = 0xc07,
  HPMCOUNTER8     = 0xc08,
  HPMCOUNTER9     = 0xc09,
  HPMCOUNTER10    = 0xc0a,
  HPMCOUNTER11    = 0xc0b,
  HPMCOUNTER12    = 0xc0c,
  HPMCOUNTER13    = 0xc0d,
  HPMCOUNTER14    = 0xc0e,
  HPMCOUNTER15    = 0xc0f,
  HPMCOUNTER16    = 0xc10,
  HPMCOUNTER17    = 0xc11,
  HPMCOUNTER18    = 0xc12,
  HPMCOUNTER19    = 0xc13,
  HPMCOUNTER20    = 0xc14,
  HPMCOUNTER21    = 0xc15,
  HPMCOUNTER22    = 0xc16,
  HPMCOUNTER23    = 0xc17,
  HPMCOUNTER24    = 0xc18,
  HPMCOUNTER25    = 0xc19,
  HPMCOUNTER26    = 0xc1a,
  HPMCOUNTER27    = 0xc1b,
  HPMCOUNTER28    = 0xc1c,
  HPMCOUNTER29    = 0xc1d,
  HPMCOUNTER30    = 0xc1e,
  HPMCOUNTER31    = 0xc1f,
  CYCLEH          = 0xc80,
  TIMEH           = 0xc81,
  INSTRETH        = 0xc82,
  HPMCOUNTER3H    = 0xc83,
  HPMCOUNTER4H    = 0xc84,
  HPMCOUNTER5H    = 0xc85,
  HPMCOUNTER6H    = 0xc86,
  HPMCOUNTER7H    = 0xc87,
  HPMCOUNTER8H    = 0xc88,
  HPMCOUNTER9H    = 0xc89,
  HPMCOUNTER10H   = 0xc8a,
  HPMCOUNTER11H   = 0xc8b,
  HPMCOUNTER12H   = 0xc8c,
  HPMCOUNTER13H   = 0xc8d,
  HPMCOUNTER14H   = 0xc8e,
  HPMCOUNTER15H   = 0xc8f,
  HPMCOUNTER16H   = 0xc90,
  HPMCOUNTER17H   = 0xc91,
  HPMCOUNTER18H   = 0xc92,
  HPMCOUNTER19H   = 0xc93,
  HPMCOUNTER20H   = 0xc94,
  HPMCOUNTER21H   = 0xc95,
  HPMCOUNTER22H   = 0xc96,
  HPMCOUNTER23H   = 0xc97,
  HPMCOUNTER24H   = 0xc98,
  HPMCOUNTER25H   = 0xc99,
  HPMCOUNTER26H   = 0xc9a,
  HPMCOUNTER27H   = 0xc9b,
  HPMCOUNTER28H   = 0xc9c,
  HPMCOUNTER29H   = 0xc9d,
  HPMCOUNTER30H   = 0xc9e,
  HPMCOUNTER31H   = 0xc9f,
  SSTATUS         = 0x100,
  SEDELEG         = 0x102,
  SIDELEG         = 0x103,
  SIE             = 0x104,
  STVEC           = 0x105,
  SCOUNTEREN      = 0x106,

  SSCRATCH        = 0x140,
  SEPC            = 0x141,
  SCAUSE          = 0x142,
  STVAL           = 0x143,
  SIP             = 0x144,
  SATP            = 0x180,

  MVENDORID       = 0xf11,
  MARCHID         = 0xf12,
  MIMPID          = 0xf13,
  MHARTID         = 0xf14,

  MSTATUS         = 0x300,
  MISA            = 0x301,
  MEDELEG         = 0x302,
  MIDELEG         = 0x303,
  MIE             = 0x304,
  MTVEC           = 0x305,
  MCOUNTEREN      = 0x306,

  MSCRATCH        = 0x340,
  MEPC            = 0x341,
  MCAUSE          = 0x342,
  MTVAL           = 0x343,
  MIP             = 0x344,

  PMPCFG0         = 0x3a0,
  PMPCFG1         = 0x3a1,
  PMPCFG2         = 0x3a2,
  PMPCFG3         = 0x3a3,
  PMPADDR0        = 0x3b0,
  PMPADDR1        = 0x3b1,
  PMPADDR2        = 0x3b2,
  PMPADDR3        = 0x3b3,
  PMPADDR4        = 0x3b4,
  PMPADDR5        = 0x3b5,
  PMPADDR6        = 0x3b6,
  PMPADDR7        = 0x3b7,
  PMPADDR8        = 0x3b8,
  PMPADDR9        = 0x3b9,
  PMPADDR10       = 0x3ba,
  PMPADDR11       = 0x3bb,
  PMPADDR12       = 0x3bc,
  PMPADDR13       = 0x3bd,
  PMPADDR14       = 0x3be,
  PMPADDR15       = 0x3bf,

  MCYCLE          = 0xb00,
  MINSTRET        = 0xb02,
  MHPMCOUNTER3    = 0xb03,
  MHPMCOUNTER4    = 0xb04,
  MHPMCOUNTER5    = 0xb05,
  MHPMCOUNTER6    = 0xb06,
  MHPMCOUNTER7    = 0xb07,
  MHPMCOUNTER8    = 0xb08,
  MHPMCOUNTER9    = 0xb09,
  MHPMCOUNTER10   = 0xb0a,
  MHPMCOUNTER11   = 0xb0b,
  MHPMCOUNTER12   = 0xb0c,
  MHPMCOUNTER13   = 0xb0d,
  MHPMCOUNTER14   = 0xb0e,
  MHPMCOUNTER15   = 0xb0f,
  MHPMCOUNTER16   = 0xb10,
  MHPMCOUNTER17   = 0xb11,
  MHPMCOUNTER18   = 0xb12,
  MHPMCOUNTER19   = 0xb13,
  MHPMCOUNTER20   = 0xb14,
  MHPMCOUNTER21   = 0xb15,
  MHPMCOUNTER22   = 0xb16,
  MHPMCOUNTER23   = 0xb17,
  MHPMCOUNTER24   = 0xb18,
  MHPMCOUNTER25   = 0xb19,
  MHPMCOUNTER26   = 0xb1a,
  MHPMCOUNTER27   = 0xb1b,
  MHPMCOUNTER28   = 0xb1c,
  MHPMCOUNTER29   = 0xb1d,
  MHPMCOUNTER30   = 0xb1e,
  MHPMCOUNTER31   = 0xb1f,
  MCYCLEH         = 0xb80,
  MINSTRETH       = 0xb82,
  MHPMCOUNTER3H   = 0xb83,
  MHPMCOUNTER4H   = 0xb84,
  MHPMCOUNTER5H   = 0xb85,
  MHPMCOUNTER6H   = 0xb86,
  MHPMCOUNTER7H   = 0xb87,
  MHPMCOUNTER8H   = 0xb88,
  MHPMCOUNTER9H   = 0xb89,
  MHPMCOUNTER10H  = 0xb8a,
  MHPMCOUNTER11H  = 0xb8b,
  MHPMCOUNTER12H  = 0xb8c,
  MHPMCOUNTER13H  = 0xb8d,
  MHPMCOUNTER14H  = 0xb8e,
  MHPMCOUNTER15H  = 0xb8f,
  MHPMCOUNTER16H  = 0xb90,
  MHPMCOUNTER17H  = 0xb91,
  MHPMCOUNTER18H  = 0xb92,
  MHPMCOUNTER19H  = 0xb93,
  MHPMCOUNTER20H  = 0xb94,
  MHPMCOUNTER21H  = 0xb95,
  MHPMCOUNTER22H  = 0xb96,
  MHPMCOUNTER23H  = 0xb97,
  MHPMCOUNTER24H  = 0xb98,
  MHPMCOUNTER25H  = 0xb99,
  MHPMCOUNTER26H  = 0xb9a,
  MHPMCOUNTER27H  = 0xb9b,
  MHPMCOUNTER28H  = 0xb9c,
  MHPMCOUNTER29H  = 0xb9d,
  MHPMCOUNTER30H  = 0xb9e,
  MHPMCOUNTER31H  = 0xb9f,

  MCOUNTINHIBIT   = 0x320,
  MHPMEVENT3      = 0x323,
  MHPMEVENT4      = 0x324,
  MHPMEVENT5      = 0x325,
  MHPMEVENT6      = 0x326,
  MHPMEVENT7      = 0x327,
  MHPMEVENT8      = 0x328,
  MHPMEVENT9      = 0x329,
  MHPMEVENT10     = 0x32a,
  MHPMEVENT11     = 0x32b,
  MHPMEVENT12     = 0x32c,
  MHPMEVENT13     = 0x32d,
  MHPMEVENT14     = 0x32e,
  MHPMEVENT15     = 0x32f,
  MHPMEVENT16     = 0x330,
  MHPMEVENT17     = 0x331,
  MHPMEVENT18     = 0x332,
  MHPMEVENT19     = 0x333,
  MHPMEVENT20     = 0x334,
  MHPMEVENT21     = 0x335,
  MHPMEVENT22     = 0x336,
  MHPMEVENT23     = 0x337,
  MHPMEVENT24     = 0x338,
  MHPMEVENT25     = 0x339,
  MHPMEVENT26     = 0x33a,
  MHPMEVENT27     = 0x33b,
  MHPMEVENT28     = 0x33c,
  MHPMEVENT29     = 0x33d,
  MHPMEVENT30     = 0x33e,
  MHPMEVENT31     = 0x33f,

  TSELECT         = 0x7a0,
  TDATA1          = 0x7a1,
  TDATA2          = 0x7a2,
  TDATA3          = 0x7a3,

  DCSR            = 0x7b0,
  DPC             = 0x7b1,
  DSCRATCH0       = 0x7b2,
  DSCRATCH1       = 0x7b3,
};

reg_t csrread(reg_t *csrs, enum csr c);
void csrwrite(reg_t *csrs, enum csr c, reg_t val);

#endif
